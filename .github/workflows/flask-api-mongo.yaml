name: Flask API + Mongo DB

on:
  workflow_dispatch:
  push:
      branches:
      - main
      paths:
      - 'Flask+Mongo/**'

permissions:
    contents: read # This is needed for the checkout action
    security-events: write # This is required to upload the SARIF file
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with: 
          python-version: '3.10'

      - name: Install Dependencies
        run: | 
          cd Flask+Mongo
          python -m pip install --upgrade pip
          pip install -r requirements.txt


  Docker-Build-and-Scan:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Create a Docker image from a Dockerfile
        run: |
          cd Flask+Mongo && docker build -t ${{ secrets.DOCKER_USERNAME }}/products-api:${{ github.event.inputs.tag || 'latest' }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
            image-ref: ${{ secrets.DOCKER_USERNAME }}/products-api:${{ github.event.inputs.tag || 'latest' }}
            format: 'sarif'
            scan-type: 'image'
            exit-code: '0U'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH'
            output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2 # Use the latest stable version
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Save Docker image as artifact
        run: docker save ${{ secrets.DOCKER_USERNAME }}/products-api:${{ github.event.inputs.tag || 'latest' }} -o image.tar
      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar


    ##################################
    #OPTIONAL DOCKER HUB PUSH         # 
    ##################################
  Docker-Build-and-Push:
      needs: Docker-Build-and-Scan
      runs-on: ubuntu-latest

      steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Load Docker image
        run: docker load -i image.tar
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/products-api:${{ github.event.inputs.tag || 'latest' }} # Replace with your actual image name and tag