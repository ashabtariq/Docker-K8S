---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  selector:
    matchLabels:
      app: redis-instance
  template:
    metadata:
      labels:
        app: redis-instance
    spec:
      containers:
        - name: redis
          image: redis
          volumeMounts:
            - name: redis-pv
              mountPath: /data
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 6379
      volumes:
        - name: redis-pv
          persistentVolumeClaim:
            claimName: redis-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: redis-instance
spec:
  selector:
    app: redis-instance
  ports:
    - port: 6379
      targetPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      serviceAccountName: pod-metrics-sa
      containers:
        - name: frontend
          image: ashabtariq12/k8s-pod-metric-viewer:v2.1
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 20
            periodSeconds: 10
          # volumeMounts:
          #   - name: kubeconfig
          #     mountPath: /root/.kube/
          #     readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          ports:
            - containerPort: 5000
      # volumes:
      #   - name: kubeconfig
      #     secret:
      #       secretName: kubeconfig-secret

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 5000
      targetPort: 5000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
spec:
  rules:
    - host: k8s.buildbee.dev
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: frontend
                port:
                  number: 5000

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/ashab/k8s-volumes

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
