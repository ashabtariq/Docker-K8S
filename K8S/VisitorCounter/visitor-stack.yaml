
############################
# REDIS BACKEND + SERVICE
###########################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  selector:
    matchLabels:
      app: redis-instance
  template:
    metadata:
      labels:
        app: redis-instance
    spec:
      containers:
      - name: redis
        image: redis
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"
        ports:
          - containerPort: 6379


---
apiVersion: v1
kind: Service
metadata:
  name: redis-instance # SHould be same as in Python File with the container
spec:
  selector:
    app: redis-instance
  ports:
  - port: 6379
    targetPort: 6379



---

############################
# PYTHON FRONTEND + SERVICE
###########################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: ashabtariq12/visitorcounter:v1.1
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"
        ports:
          - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
  - port: 5000
    targetPort: 5000



---
#################
# INGRESS
#################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  #namespace: kubernetes-dashboard
spec:
  rules:
  - host: k8s.buildbee.dev
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: frontend
            port: 
              number: 5000
